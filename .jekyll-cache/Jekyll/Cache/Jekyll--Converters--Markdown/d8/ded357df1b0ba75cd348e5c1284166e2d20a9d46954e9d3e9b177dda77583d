I"L]<h2 id="dfa-识别语言"><a href="http://soj.acmm.club/show_problem.php?pid=1000&amp;cid=2834">DFA 识别语言</a></h2>

<p>Time Limit: 1sec Memory Limit:256MB</p>

<h3 id="description">Description</h3>

<p>对于给出的 DFA 和输入的字符串，判断字符串是否是 DFA 识别的语言。</p>

<h3 id="input">Input</h3>

<p>输入有多组数据。每组数据的第一行是两个整数 N（N&lt;=50）和 M（M&lt;=26），分别代表 DFA 的状态数和字母表的字符数。DFA 的 N 个状态用整数 0 ～ N-1 表示。状态 0 为起始状态。字母表包含的字符是小写英文字母的前 M 个字符。接下来的 N 行，每行有 M 个整数。其中第 i 行第 j 列的数字 k，表示 DFA 在状态 i-1，当输入符号为第 j 个小写字母时，迁移到状态 k。接下来的一行包含若干个整数，代表 DFA 的接受状态，这一行以-1 结尾。接下来的每一行是一个待识别的字符串，字符串的长度在 1 到 50 之间且只含有小写字母。字符串”#”代表本组数据结束。N=M=0 表示输入结束。</p>

<h3 id="output">Output</h3>

<p>对于每个待识别的字符串，如果能被给出的DFA识别，输出YES；否则输出NO。</p>

<h3 id="sample-input">Sample Input</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>4 2
1 0
1 2
1 3
1 0
3 <span class="nt">-1</span>
aaabb
abbab
abbaaabb
abbb
<span class="c">#</span>
1 3
0 0 0
0 <span class="nt">-1</span>
cacba
<span class="c">#</span>
0 0
</code></pre></div></div>

<h3 id="sample-output">Sample output</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>YES
NO
YES
NO
YES
</code></pre></div></div>

<h3 id="hint">Hint</h3>

<p>你只需要实现课本Figure 3.27的程序就可以。</p>

<h3 id="solution">Solution</h3>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;bits/stdc++.h&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="k">struct</span> <span class="nc">DeterministicFiniteAutomaton</span>
<span class="p">{</span>
    <span class="k">struct</span> <span class="nc">State</span>
    <span class="p">{</span>
        <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">trans</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">isAccepted</span><span class="p">;</span>
        <span class="n">State</span><span class="p">(</span><span class="kt">int</span> <span class="n">m</span><span class="p">)</span> <span class="o">:</span> <span class="n">trans</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">),</span> <span class="n">isAccepted</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="p">{}</span>
    <span class="p">};</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">State</span><span class="o">&gt;</span> <span class="n">state</span><span class="p">;</span>
    <span class="n">DeterministicFiniteAutomaton</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">m</span><span class="p">)</span> <span class="o">:</span> <span class="n">state</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">State</span><span class="p">(</span><span class="n">m</span><span class="p">))</span> <span class="p">{}</span>
    <span class="kt">int</span> <span class="n">ask</span><span class="p">(</span><span class="k">const</span> <span class="n">string</span> <span class="o">&amp;</span><span class="n">s</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">cur</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">s</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cur</span> <span class="o">=</span> <span class="n">state</span><span class="p">[</span><span class="n">cur</span><span class="p">].</span><span class="n">trans</span><span class="p">[</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="sc">'a'</span><span class="p">];</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">cur</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
                <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">state</span><span class="p">[</span><span class="n">cur</span><span class="p">].</span><span class="n">isAccepted</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">;</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span> <span class="o">&gt;&gt;</span> <span class="n">m</span> <span class="o">&amp;&amp;</span> <span class="n">n</span> <span class="o">&amp;&amp;</span> <span class="n">m</span><span class="p">;)</span>
    <span class="p">{</span>
        <span class="n">DeterministicFiniteAutomaton</span> <span class="n">dfa</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">);</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">k</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">k</span><span class="p">;</span>
                <span class="n">dfa</span><span class="p">.</span><span class="n">state</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">trans</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">k</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="p">;</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">k</span> <span class="o">&amp;&amp;</span> <span class="n">k</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;)</span>
            <span class="n">dfa</span><span class="p">.</span><span class="n">state</span><span class="p">[</span><span class="n">k</span><span class="p">].</span><span class="n">isAccepted</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">;</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">s</span> <span class="o">&amp;&amp;</span> <span class="n">s</span> <span class="o">!=</span> <span class="s">"#"</span><span class="p">;)</span>
            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">dfa</span><span class="p">.</span><span class="n">ask</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="o">?</span> <span class="s">"YES</span><span class="se">\n</span><span class="s">"</span> <span class="o">:</span> <span class="s">"NO</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="nfa-识别语言"><a href="http://soj.acmm.club/show_problem.php?pid=1001&amp;cid=2834">NFA 识别语言</a></h2>

<p>Time Limit: 1sec Memory Limit:256MB</p>

<h3 id="description-1">Description</h3>

<p>对于给出的 NFA 和输入的字符串，判断字符串是否是 NFA 识别的语言。</p>

<h3 id="input-1">Input</h3>

<p>输入有多组数据。每组数据的第一行是两个整数 N（N&lt;=50）和 M（M&lt;=27），表示 NFA 有 N 个状态，以及字母表有 M-1 个字符。NFA 的 N 个状态用整数 0 ～ N-1 表示，状态 0 为起始状态。字母表包含小写英文字母的前 M-1 个字符。接下来的 N 行，每行有 M 个整数集（用’{‘和’}’括起）。其中，第 i 行第 1 列的整数集表示在状态 i-1 时，对应于 є（空串）的状态迁移；第 i 行第 j（j&gt;1）列的整数集，表示 NFA 在状态 i-1，当输入符号为第 j-1 个小写字母时，迁移到的状态集。接下来的一行包含若干个整数，代表 NFA 的接受状态，这一行以-1 结尾。接下来的每一行是一个待识别的字符串，字符串的长度在 1 到 50 之间且只含有小写字母。字符串”#”代表本组数据结束。N=M=0 表示输入结束。</p>

<h3 id="output-1">Output</h3>

<p>对于每个待识别的字符串，如果能被给出的 NFA 识别，输出 YES；否则输出 NO。</p>

<h3 id="sample-input-1">Sample Input</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>4 3
<span class="o">{}</span> <span class="o">{</span>0,1<span class="o">}</span> <span class="o">{</span>0<span class="o">}</span>
<span class="o">{}</span> <span class="o">{}</span> <span class="o">{</span>2<span class="o">}</span>
<span class="o">{}</span> <span class="o">{}</span> <span class="o">{</span>3<span class="o">}</span>
<span class="o">{}</span> <span class="o">{}</span> <span class="o">{}</span>
3 <span class="nt">-1</span>
aaabb
abbab
abbaaabb
abbb
<span class="c">#</span>
0 0
</code></pre></div></div>

<h3 id="sample-output-1">Sample Output</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>YES
NO
YES
NO
</code></pre></div></div>

<h3 id="hint-1">Hint</h3>

<p>输入样例是课本Figure 3.24的NFA。你需要实现的是课本Figure 3.33和3.37的算法。</p>

<h3 id="solution-1">Solution</h3>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;bits/stdc++.h&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="k">struct</span> <span class="nc">NondeterministicFiniteAutomaton</span>
<span class="p">{</span>
    <span class="k">struct</span> <span class="nc">State</span>
    <span class="p">{</span>
        <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">trans</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">isAccepted</span><span class="p">;</span>
        <span class="n">State</span><span class="p">(</span><span class="kt">int</span> <span class="n">m</span><span class="p">)</span> <span class="o">:</span> <span class="n">trans</span><span class="p">(</span><span class="n">m</span><span class="p">),</span> <span class="n">isAccepted</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="p">{}</span>
    <span class="p">};</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">State</span><span class="o">&gt;</span> <span class="n">state</span><span class="p">;</span>
    <span class="n">NondeterministicFiniteAutomaton</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">m</span><span class="p">)</span> <span class="o">:</span> <span class="n">state</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">State</span><span class="p">(</span><span class="n">m</span><span class="p">))</span> <span class="p">{}</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">vis</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">ask</span><span class="p">(</span><span class="k">const</span> <span class="n">string</span> <span class="o">&amp;</span><span class="n">s</span><span class="p">,</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">cur</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">vis</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">cur</span><span class="p">])</span>
            <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
        <span class="n">vis</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">cur</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">s</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">state</span><span class="p">[</span><span class="n">cur</span><span class="p">].</span><span class="n">isAccepted</span><span class="p">)</span>
            <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">:</span> <span class="n">state</span><span class="p">[</span><span class="n">cur</span><span class="p">].</span><span class="n">trans</span><span class="p">.</span><span class="n">back</span><span class="p">())</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">ask</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">))</span>
                <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">s</span><span class="p">.</span><span class="n">size</span><span class="p">())</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">:</span> <span class="n">state</span><span class="p">[</span><span class="n">cur</span><span class="p">].</span><span class="n">trans</span><span class="p">[</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="sc">'a'</span><span class="p">])</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">ask</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="p">))</span>
                    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">;</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span> <span class="o">&gt;&gt;</span> <span class="n">m</span> <span class="o">&amp;&amp;</span> <span class="n">n</span> <span class="o">&amp;&amp;</span> <span class="n">m</span><span class="p">;)</span>
    <span class="p">{</span>
        <span class="n">NondeterministicFiniteAutomaton</span> <span class="n">dfa</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">);</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">string</span> <span class="n">s</span><span class="p">;</span>
                <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">s</span><span class="p">;</span>
                <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="n">s</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">k</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">isdigit</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">k</span><span class="p">]))</span>
                    <span class="p">{</span>
                        <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
                            <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                        <span class="n">x</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">s</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">-</span> <span class="sc">'0'</span><span class="p">;</span>
                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="n">dfa</span><span class="p">.</span><span class="n">state</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">trans</span><span class="p">[(</span><span class="n">j</span> <span class="o">+</span> <span class="n">m</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">m</span><span class="p">].</span><span class="n">push_back</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
                        <span class="n">x</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="p">;</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">k</span> <span class="o">&amp;&amp;</span> <span class="n">k</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;)</span>
            <span class="n">dfa</span><span class="p">.</span><span class="n">state</span><span class="p">[</span><span class="n">k</span><span class="p">].</span><span class="n">isAccepted</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">;</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">s</span> <span class="o">&amp;&amp;</span> <span class="n">s</span> <span class="o">!=</span> <span class="s">"#"</span><span class="p">;)</span>
        <span class="p">{</span>
            <span class="n">dfa</span><span class="p">.</span><span class="n">vis</span><span class="p">.</span><span class="n">assign</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="mi">0</span><span class="p">));</span>
            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">dfa</span><span class="p">.</span><span class="n">ask</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="o">?</span> <span class="s">"YES</span><span class="se">\n</span><span class="s">"</span> <span class="o">:</span> <span class="s">"NO</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
:ET